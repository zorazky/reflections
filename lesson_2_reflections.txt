what happens when you initialize a repository? why do you need to do it?

creates the .git folder with all the metadata, to start saving versions of your files

------

how is the staging area different from the working directory and the repository? What value do you think it offers?

is like a temporal are to add files before commit, to add several files in one commit

-----

just a test

-----

how can you use the staging area to make sure you have one commit per logical change?

by comparing between staging and work directory using "git diff" or between staged and last commit with  "git diff --staged"

-----

what are some situations when branches would be helpful in keeping your history organized? How would branches help?

when you want to test a new feature but you are not really sure, maybe try other languages or tests

-----

how do the diagrams help you visualize the branch structure?

using the mental model of a tree is easy to understand how is the interaction between master and branches

-----

what is the result of merging two branches  together? why do we represent it in the diagram the way we do?

we combine new branch with master branch with the help of master branch commit when new branch was created. To visually show how the merging works

-----

What are the pros and cons of Git's automatic merging vs. always doing merges manually?

in complex project automatic save a lot of time manually helps when conflict between branches.

-----
